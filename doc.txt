Nhóm nên phát triển một ứng dụng hiển thị thông tin tóm tắt sau:
1 Tổng thu nhập theo cổ đông, giới tính, dân tộc, nhân viên bán thời gian và toàn thời gian cho đến nay và năm trước, theo phòng ban
2 Tổng số ngày nghỉ phép của cổ đông, giới tính, dân tộc, nhân viên bán thời gian và toàn thời gian cho đến nay và năm trước
3 Lợi ích trung bình được trả cho cổ đông và người không phải cổ đông cho đến nay theo kế hoạch phúc lợi
Ngoài ra, ban quản lý muốn có thể thiết lập cảnh báo khi các điều kiện sau xảy ra:
  1 Một nhân viên còn trong một số ngày nhất định kể từ ngày kỷ niệm tuyển dụng của họ
  2 Một nhân viên đã tích lũy được hơn một số ngày nghỉ phép nhất định
  3 Nhân viên thực hiện thay đổi đối với kế hoạch phúc lợi của họ ảnh hưởng đến bảng lương của họ
  4 Tất cả nhân viên có ngày sinh nhật trong tháng hiện tại
Tôi chắc chắn rằng chúng tôi sẽ có thêm nhu cầu thông tin trong tương lai, nhưng điều này sẽ giải quyết được những nhu cầu cấp thiết nhất của chúng tôi. Ngoài thông tin tóm tắt, các nhà quản lý cấp cao phải có khả năng "đi sâu" vào
thông tin tóm tắt để xem thông tin cụ thể.

---------------------------------------------------------------------------------------------------------------

Yêu cầu:
  Our company has two separate systems for managing our Human Resources Department and our Payroll
department. Every time I ask for information about our employees, it takes both departments a
significant amount of time to gather the information that I need. In addition, our shareholders often ask
for information about our employees and both departments have to stop their work to gather the
information to answer their questions. It seems very inefficient to me and I feel limited in the kinds of
information that I can ask for. Therefore, I am not able to make timely management decisions.
Another problem that my management team faces is that we often discover a problem before it is too
late. Ideally, we would like the systems to let us know when certain conditions exist or special events
take place, such as employment anniversaries. Neither system provides us with the ability to manage by
exception.
Our company is growing very quickly so our need to provide timely information to our senior managers
is becoming critical. We would like your team to develop a dashboard that can be used by senior
managers to show summary information about our employees and their payroll and benefits
information. Although we are considering changing to a different financial system or Human Resource
Management system, we would like to explore the possibility of continuing with our existing systems for
a while longer.
The team should develop an application that shows the following summarized information:
1) The total earnings by shareholder, gender, ethnicity, part-time, and full- time employee to
date and the previous year, by department

2) Total number of vacation days taken by shareholder, gender, ethnicity, part-time, and full-
time employee to date and the previous year

3) Average benefits paid to shareholders and non-shareholders to date by benefits plan
In addition, management would like to be able to set alerts when the following conditions occur:
1) An employee is within a certain number of days of their hiring anniversary
2) An employee has accumulated more than a certain number of days of vacation
3) Employees make a change to their benefits plan that affects their payroll
4) All employees who have birthdays within the current month
I am sure that we will have more information needs in the future, but this will address our most pressing
needs. In addition to the summary information, senior managers must be able to “drill down” into the
summary information to see specifics. The dashboard should have that capability to see the details
behind the summary. Please provide a plan to accomplish the work. It would also be helpful to see some
drafts of the interface so that we can make sure the team is on track with our needs.

---------------------------------------------------------------------------------------------------------------

employee
router.get('/', employeeController.getAllEmployees);
router.get('/department/:department', employeeController.getEmployeesByDepartment);
router.get('/:id', employeeController.getEmployeeById);
router.post('/', employeeController.createEmployee);
router.put('/:id', employeeController.updateEmployee);

employee: có thể lấy dữ liệu của toàn bộ employee
          có thể lấy dữ liệu toàn bộ emp thuộc một phòng ban nhất định
          có thể lấy dữ liệu 1 emp bằng id 
          có thể thêm mới một nhân viên
          có thể sửa đổi thông tin một nhân viên()

--------------------

payroll
router.get('/', payrollController.getALlPayrolls);
router.post('/', payrollController.createPayroll);
router.get('/:employeeId/:year', payrollController.getPayrollsByEmployeeId);
router.get('/department/:department/:year', payrollController.getEarningsByDepartment);
router.get('/total-department-earning/:department/:year', payrollController.getTotalEarningByDepartment);

router: có thể lấy toàn bộ earning
        có thể thêm mới một earning 
        có thể lấy 1 earning thông qua id và year - nếu ko có year thì year sẽ được lấy năm hiện tại
        có thể lấy toàn bộ earning thuộc 1 phòng ban 
        lấy tổng earning của một phòng ban nhất 

---
gateway
router.post('/', EmployeeController.createEmployee);
router.get('/', EmployeeController.getEmployee);
router.get('/:id/:year', EmployeeController.getEmployeeAndPayrollById);
router.get('/get-by-department/:department/:year', EmployeeController.getEmployeesAndPayrollsByDepartment);
router.get('/get-total-by-department/:department/:year', EmployeeController.getTotalEarningByDepartment);

gateway: có thể lấy toàn bộ emp(cùng earning tương ứng) của toàn bộ 




---------------------------------------

Dự kiến FE
- Trang chủ lấy api gồm tên phòng ban,tổng earning của phòng ban đó,năm hiện tại,năm trước đó
+ Để làm được cần 
 ++ Ở Employee thì duyệt qua db và lấy ra các department hiện có
 ++ Ở Payroll service lấy tổng thu nhập của phòng ban của năm hiện tại,và tổng thu nhập của phòng ban năm trước đó -> chỉ cần thiết kế method duy nhất cho phép trả data về theo năm
 ++ Ở gateway thì call api của employee service lấy danh sách các phòng ban,sau khi có đc list phòng ban từ employee service thì lấy từng tên phòng ban gọi api và lấy tổng của từng phòng ban.Xử lý dữ liệu và trả về client kết quả như sau:
 [{
    department,earningCurrent,earningLastYear
 }] 

- Trang tiếp theo là trang chi tiết nhân viên show earning và:
Gồm:EmployeeId,fullName,gender,department,employmentType,shareHolder,earning, vacationDaysAccumulated,
  vacationDaysTaken.

{  _id?: ObjectId;
  gender: string;
  ethnicity: string;
  shareHolder: boolean;
  department: string;
  employmentType: string;
  hireDate: Date;
  birthday: Date;
  vacationDaysAccumulated: number;
  vacationDaysTaken: number;
  benefitPlan: string;
  }

